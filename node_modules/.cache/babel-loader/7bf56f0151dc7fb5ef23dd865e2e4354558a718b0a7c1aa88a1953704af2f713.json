{"ast":null,"code":"var _jsxFileName = \"/Users/mattis/src/NyskolenPosten/src/components/ArtikkelVisning.js\",\n  _s = $RefreshSig$();\n// components/ArtikkelVisning.js\nimport React from 'react';\nimport { useParams, Navigate, Link } from 'react-router-dom';\nimport './ArtikkelVisning.css';\n\n// Enkel funksjon for å konvertere markdown til HTML\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst konverterMarkdown = tekst => {\n  if (!tekst) return '';\n\n  // Konverter overskrifter (### Overskrift)\n  let formatertTekst = tekst.replace(/### (.*?)(\\n|$)/g, '<h3>$1</h3>');\n\n  // Konverter fet tekst (**tekst**)\n  formatertTekst = formatertTekst.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n\n  // Konverter kursiv tekst (*tekst*)\n  formatertTekst = formatertTekst.replace(/\\*([^\\*]+)\\*/g, '<em>$1</em>');\n\n  // Konverter linjeskift til paragrafer\n  formatertTekst = formatertTekst.split('\\n\\n').map(avsnitt => avsnitt.trim() ? `<p>${avsnitt}</p>` : '').join('');\n  return formatertTekst;\n};\nfunction ArtikkelVisning({\n  artikler = [],\n  innloggetBruker\n}) {\n  _s();\n  const {\n    artikkelID\n  } = useParams();\n\n  // Finn artikkel basert på ID\n  const artikkel = artikler.find(a => a.artikkelID === artikkelID);\n\n  // Hvis artikkelen ikke finnes, redirect til forsiden\n  if (!artikkel) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Hvis artikkelen ikke er godkjent og brukeren ikke er admin eller forfatter, redirect til forsiden\n  if (!artikkel.godkjent && (!innloggetBruker || innloggetBruker.rolle !== 'admin' && innloggetBruker.id !== artikkel.forfatterID)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Formater dato\n  const formatertDato = new Date(artikkel.dato).toLocaleDateString('no-NO', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n\n  // Konverter markdown til HTML\n  const formatertInnhold = konverterMarkdown(artikkel.innhold);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artikkel-visning\",\n    children: [!artikkel.godkjent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ikke-godkjent-advarsel\",\n      children: \"Denne artikkelen er ikke godkjent enn\\xE5 og er kun synlig for deg og redakt\\xF8rer.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"artikkel\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"artikkel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"artikkel-tittel\",\n          children: artikkel.tittel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artikkel-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"artikkel-forfatter\",\n            children: [\"Av \", artikkel.forfatter]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"artikkel-dato\",\n            children: [\"Publisert \", formatertDato]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"artikkel-kategori\",\n            children: [\"Kategori: \", artikkel.kategori]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), artikkel.bilde && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artikkel-bilde\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artikkel.bilde,\n          alt: artikkel.tittel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artikkel-ingress\",\n        children: artikkel.ingress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artikkel-innhold\",\n        dangerouslySetInnerHTML: {\n          __html: formatertInnhold\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artikkel-navigasjon\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"tilbake-lenke\",\n        children: \"\\u2190 Tilbake til forsiden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtikkelVisning, \"8RHS9tbWFChQxr5oyEEVOX/fHig=\", false, function () {\n  return [useParams];\n});\n_c = ArtikkelVisning;\nexport default ArtikkelVisning;\nvar _c;\n$RefreshReg$(_c, \"ArtikkelVisning\");","map":{"version":3,"names":["React","useParams","Navigate","Link","jsxDEV","_jsxDEV","konverterMarkdown","tekst","formatertTekst","replace","split","map","avsnitt","trim","join","ArtikkelVisning","artikler","innloggetBruker","_s","artikkelID","artikkel","find","a","to","fileName","_jsxFileName","lineNumber","columnNumber","godkjent","rolle","id","forfatterID","formatertDato","Date","dato","toLocaleDateString","year","month","day","formatertInnhold","innhold","className","children","tittel","forfatter","kategori","bilde","src","alt","ingress","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/mattis/src/NyskolenPosten/src/components/ArtikkelVisning.js"],"sourcesContent":["// components/ArtikkelVisning.js\nimport React from 'react';\nimport { useParams, Navigate, Link } from 'react-router-dom';\nimport './ArtikkelVisning.css';\n\n// Enkel funksjon for å konvertere markdown til HTML\nconst konverterMarkdown = (tekst) => {\n  if (!tekst) return '';\n  \n  // Konverter overskrifter (### Overskrift)\n  let formatertTekst = tekst.replace(/### (.*?)(\\n|$)/g, '<h3>$1</h3>');\n  \n  // Konverter fet tekst (**tekst**)\n  formatertTekst = formatertTekst.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n  \n  // Konverter kursiv tekst (*tekst*)\n  formatertTekst = formatertTekst.replace(/\\*([^\\*]+)\\*/g, '<em>$1</em>');\n  \n  // Konverter linjeskift til paragrafer\n  formatertTekst = formatertTekst\n    .split('\\n\\n')\n    .map(avsnitt => avsnitt.trim() ? `<p>${avsnitt}</p>` : '')\n    .join('');\n  \n  return formatertTekst;\n};\n\nfunction ArtikkelVisning({ artikler = [], innloggetBruker }) {\n  const { artikkelID } = useParams();\n  \n  // Finn artikkel basert på ID\n  const artikkel = artikler.find(a => a.artikkelID === artikkelID);\n  \n  // Hvis artikkelen ikke finnes, redirect til forsiden\n  if (!artikkel) {\n    return <Navigate to=\"/\" replace />;\n  }\n  \n  // Hvis artikkelen ikke er godkjent og brukeren ikke er admin eller forfatter, redirect til forsiden\n  if (!artikkel.godkjent && \n      (!innloggetBruker || \n       (innloggetBruker.rolle !== 'admin' && \n        innloggetBruker.id !== artikkel.forfatterID))) {\n    return <Navigate to=\"/\" replace />;\n  }\n  \n  // Formater dato\n  const formatertDato = new Date(artikkel.dato).toLocaleDateString('no-NO', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  \n  // Konverter markdown til HTML\n  const formatertInnhold = konverterMarkdown(artikkel.innhold);\n\n  return (\n    <div className=\"artikkel-visning\">\n      {!artikkel.godkjent && (\n        <div className=\"ikke-godkjent-advarsel\">\n          Denne artikkelen er ikke godkjent ennå og er kun synlig for deg og redaktører.\n        </div>\n      )}\n      \n      <article className=\"artikkel\">\n        <header className=\"artikkel-header\">\n          <h1 className=\"artikkel-tittel\">{artikkel.tittel}</h1>\n          \n          <div className=\"artikkel-meta\">\n            <span className=\"artikkel-forfatter\">Av {artikkel.forfatter}</span>\n            <span className=\"artikkel-dato\">Publisert {formatertDato}</span>\n            <span className=\"artikkel-kategori\">Kategori: {artikkel.kategori}</span>\n          </div>\n        </header>\n        \n        {artikkel.bilde && (\n          <div className=\"artikkel-bilde\">\n            <img src={artikkel.bilde} alt={artikkel.tittel} />\n          </div>\n        )}\n        \n        <div className=\"artikkel-ingress\">\n          {artikkel.ingress}\n        </div>\n        \n        <div \n          className=\"artikkel-innhold\"\n          dangerouslySetInnerHTML={{ __html: formatertInnhold }}\n        />\n      </article>\n      \n      <div className=\"artikkel-navigasjon\">\n        <Link to=\"/\" className=\"tilbake-lenke\">\n          &larr; Tilbake til forsiden\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default ArtikkelVisning; "],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,kBAAkB;AAC5D,OAAO,uBAAuB;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;EACnC,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;;EAErB;EACA,IAAIC,cAAc,GAAGD,KAAK,CAACE,OAAO,CAAC,kBAAkB,EAAE,aAAa,CAAC;;EAErE;EACAD,cAAc,GAAGA,cAAc,CAACC,OAAO,CAAC,gBAAgB,EAAE,qBAAqB,CAAC;;EAEhF;EACAD,cAAc,GAAGA,cAAc,CAACC,OAAO,CAAC,eAAe,EAAE,aAAa,CAAC;;EAEvE;EACAD,cAAc,GAAGA,cAAc,CAC5BE,KAAK,CAAC,MAAM,CAAC,CACbC,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAAC,GAAG,MAAMD,OAAO,MAAM,GAAG,EAAE,CAAC,CACzDE,IAAI,CAAC,EAAE,CAAC;EAEX,OAAON,cAAc;AACvB,CAAC;AAED,SAASO,eAAeA,CAAC;EAAEC,QAAQ,GAAG,EAAE;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC3D,MAAM;IAAEC;EAAW,CAAC,GAAGlB,SAAS,CAAC,CAAC;;EAElC;EACA,MAAMmB,QAAQ,GAAGJ,QAAQ,CAACK,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,UAAU,KAAKA,UAAU,CAAC;;EAEhE;EACA,IAAI,CAACC,QAAQ,EAAE;IACb,oBAAOf,OAAA,CAACH,QAAQ;MAACqB,EAAE,EAAC,GAAG;MAACd,OAAO;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,IAAI,CAACP,QAAQ,CAACQ,QAAQ,KACjB,CAACX,eAAe,IACfA,eAAe,CAACY,KAAK,KAAK,OAAO,IACjCZ,eAAe,CAACa,EAAE,KAAKV,QAAQ,CAACW,WAAY,CAAC,EAAE;IACnD,oBAAO1B,OAAA,CAACH,QAAQ;MAACqB,EAAE,EAAC,GAAG;MAACd,OAAO;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,MAAMK,aAAa,GAAG,IAAIC,IAAI,CAACb,QAAQ,CAACc,IAAI,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;IACxEC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE;EACP,CAAC,CAAC;;EAEF;EACA,MAAMC,gBAAgB,GAAGjC,iBAAiB,CAACc,QAAQ,CAACoB,OAAO,CAAC;EAE5D,oBACEnC,OAAA;IAAKoC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAC9B,CAACtB,QAAQ,CAACQ,QAAQ,iBACjBvB,OAAA;MAAKoC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAExC;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,eAEDtB,OAAA;MAASoC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBAC3BrC,OAAA;QAAQoC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBACjCrC,OAAA;UAAIoC,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEtB,QAAQ,CAACuB;QAAM;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEtDtB,OAAA;UAAKoC,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BrC,OAAA;YAAMoC,SAAS,EAAC,oBAAoB;YAAAC,QAAA,GAAC,KAAG,EAACtB,QAAQ,CAACwB,SAAS;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnEtB,OAAA;YAAMoC,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAC,YAAU,EAACV,aAAa;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChEtB,OAAA;YAAMoC,SAAS,EAAC,mBAAmB;YAAAC,QAAA,GAAC,YAAU,EAACtB,QAAQ,CAACyB,QAAQ;UAAA;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EAERP,QAAQ,CAAC0B,KAAK,iBACbzC,OAAA;QAAKoC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BrC,OAAA;UAAK0C,GAAG,EAAE3B,QAAQ,CAAC0B,KAAM;UAACE,GAAG,EAAE5B,QAAQ,CAACuB;QAAO;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CACN,eAEDtB,OAAA;QAAKoC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC9BtB,QAAQ,CAAC6B;MAAO;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eAENtB,OAAA;QACEoC,SAAS,EAAC,kBAAkB;QAC5BS,uBAAuB,EAAE;UAAEC,MAAM,EAAEZ;QAAiB;MAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAEVtB,OAAA;MAAKoC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClCrC,OAAA,CAACF,IAAI;QAACoB,EAAE,EAAC,GAAG;QAACkB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAEvC;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACT,EAAA,CAvEQH,eAAe;EAAA,QACCd,SAAS;AAAA;AAAAmD,EAAA,GADzBrC,eAAe;AAyExB,eAAeA,eAAe;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}