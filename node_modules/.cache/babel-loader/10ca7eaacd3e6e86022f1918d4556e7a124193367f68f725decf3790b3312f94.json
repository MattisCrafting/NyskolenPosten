{"ast":null,"code":"var _jsxFileName = \"/Users/mattis/src/NyskolenPosten/src/App.js\",\n  _s = $RefreshSig$();\n// App.js - Hovedkomponenten for Nyskolen Posten\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport Hjem from './components/Hjem';\nimport OmOss from './components/OmOss';\nimport NyArtikkel from './components/NyArtikkel';\nimport ArtikkelVisning from './components/ArtikkelVisning';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport MineArtikler from './components/MineArtikler';\nimport AdminPanel from './components/AdminPanel';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bruker, setBruker] = useState(null);\n  const [artikler, setArtikler] = useState([]);\n  const [brukere, setBrukere] = useState([]);\n  const [jobbliste, setJobbliste] = useState([]);\n  const [kategoriliste, setKategoriliste] = useState([]);\n\n  // Liste over e-postadresser som automatisk får redaktør/admin-rolle\n  const adminEmails = ['mattis.tollefsen@nionett.no', 'admin@nyskolen.no'];\n\n  // Håndterer innlogging\n  const handleLogin = brukerInfo => {\n    setBruker(brukerInfo);\n    localStorage.setItem('bruker', JSON.stringify(brukerInfo));\n  };\n  const handleLogout = () => {\n    setBruker(null);\n    localStorage.removeItem('bruker');\n  };\n\n  // Registrerer ny bruker\n  const registrerBruker = nyBruker => {\n    // Sjekk om epost allerede er registrert\n    if (brukere.some(b => b.epost === nyBruker.epost)) {\n      return false; // Epost allerede i bruk\n    }\n\n    // Sjekk om e-posten er i listen over admin-e-poster\n    const erAdmin = adminEmails.includes(nyBruker.epost);\n    const brukerMedInfo = {\n      ...nyBruker,\n      id: Date.now().toString(),\n      godkjent: erAdmin ? true : false,\n      // Automatisk godkjent hvis admin-e-post\n      rolle: erAdmin ? 'admin' : 'journalist',\n      // Sett rolle basert på e-post\n      dato: new Date().toISOString()\n    };\n    const oppdaterteBrukere = [...brukere, brukerMedInfo];\n    setBrukere(oppdaterteBrukere);\n    localStorage.setItem('brukere', JSON.stringify(oppdaterteBrukere));\n\n    // Hvis brukeren er admin, legg til i jobblisten\n    if (erAdmin) {\n      const nyJobb = {\n        id: Date.now().toString(),\n        brukerID: brukerMedInfo.id,\n        navn: brukerMedInfo.navn,\n        rolle: 'redaktør/administrator',\n        dato: new Date().toISOString()\n      };\n      const oppdatertJobbliste = [...jobbliste, nyJobb];\n      setJobbliste(oppdatertJobbliste);\n      localStorage.setItem('jobbliste', JSON.stringify(oppdatertJobbliste));\n    }\n    return true; // Registrering vellykket\n  };\n\n  // Oppdater bruker\n  const oppdaterBruker = oppdatertBruker => {\n    const oppdaterteBrukere = brukere.map(bruker => bruker.id === oppdatertBruker.id ? oppdatertBruker : bruker);\n    setBrukere(oppdaterteBrukere);\n    localStorage.setItem('brukere', JSON.stringify(oppdaterteBrukere));\n  };\n\n  // Slett bruker\n  const slettBruker = brukerId => {\n    const oppdaterteBrukere = brukere.filter(bruker => bruker.id !== brukerId);\n    setBrukere(oppdaterteBrukere);\n    localStorage.setItem('brukere', JSON.stringify(oppdaterteBrukere));\n  };\n\n  // Legg til ny artikkel\n  const leggTilArtikkel = nyArtikkel => {\n    if (!bruker) return false;\n\n    // Legger til bruker og dato til artikkelen\n    const artikkelMedInfo = {\n      ...nyArtikkel,\n      forfatterNavn: bruker.navn,\n      forfatterID: bruker.id,\n      dato: new Date().toISOString(),\n      id: Date.now().toString(),\n      status: 'publisert' // For testing setter vi status til publisert\n    };\n\n    // Legger til i listen over artikler\n    const oppdaterteArtikler = [artikkelMedInfo, ...artikler];\n    setArtikler(oppdaterteArtikler);\n    localStorage.setItem('artikler', JSON.stringify(oppdaterteArtikler));\n    return artikkelMedInfo.id;\n  };\n\n  // Oppdater artikkel\n  const oppdaterArtikkel = oppdatertArtikkel => {\n    const oppdaterteArtikler = artikler.map(artikkel => artikkel.id === oppdatertArtikkel.id ? oppdatertArtikkel : artikkel);\n    setArtikler(oppdaterteArtikler);\n    localStorage.setItem('artikler', JSON.stringify(oppdaterteArtikler));\n  };\n\n  // Sletter en artikkel\n  const slettArtikkel = artikkelId => {\n    const oppdaterteArtikler = artikler.filter(artikkel => artikkel.id !== artikkelId);\n    setArtikler(oppdaterteArtikler);\n    localStorage.setItem('artikler', JSON.stringify(oppdaterteArtikler));\n  };\n\n  // Henter data ved oppstart\n  useEffect(() => {\n    // Sjekk om bruker er logget inn i localStorage\n    const lagretBruker = localStorage.getItem('bruker');\n    if (lagretBruker) {\n      setBruker(JSON.parse(lagretBruker));\n    }\n\n    // Henter artikler fra localStorage\n    const lagretArtikler = localStorage.getItem('artikler');\n    if (lagretArtikler) {\n      setArtikler(JSON.parse(lagretArtikler));\n    }\n\n    // Henter brukere fra localStorage\n    const lagretBrukere = localStorage.getItem('brukere');\n    if (lagretBrukere) {\n      setBrukere(JSON.parse(lagretBrukere));\n    } else {\n      // Opprett admin-bruker ved første oppstart hvis ingen brukere finnes\n      const adminBruker = {\n        id: 'admin-1',\n        navn: 'Administrator',\n        epost: 'admin@nyskolen.no',\n        rolle: 'admin',\n        godkjent: true,\n        dato: new Date().toISOString()\n      };\n      setBrukere([adminBruker]);\n      localStorage.setItem('brukere', JSON.stringify([adminBruker]));\n    }\n\n    // Henter jobbliste fra localStorage\n    const lagretJobbliste = localStorage.getItem('jobbliste');\n    if (lagretJobbliste) {\n      setJobbliste(JSON.parse(lagretJobbliste));\n    } else {\n      // Opprett standard jobbliste hvis ingen finnes\n      const standardJobbliste = [{\n        id: 'jobb-1',\n        brukerID: 'admin-1',\n        navn: 'Administrator',\n        rolle: 'redaktør/administrator',\n        dato: new Date().toISOString()\n      }];\n      setJobbliste(standardJobbliste);\n      localStorage.setItem('jobbliste', JSON.stringify(standardJobbliste));\n    }\n\n    // Henter kategoriliste fra localStorage\n    const lagretKategoriliste = localStorage.getItem('kategoriliste');\n    if (lagretKategoriliste) {\n      setKategoriliste(JSON.parse(lagretKategoriliste));\n    } else {\n      // Opprett standard kategoriliste hvis ingen finnes\n      const standardKategoriliste = [{\n        id: 'kat-1',\n        kategori: 'Nyheter',\n        ansvarlig: 'Administrator'\n      }, {\n        id: 'kat-2',\n        kategori: 'Saksmøtet',\n        ansvarlig: 'Administrator'\n      }, {\n        id: 'kat-3',\n        kategori: 'Meninger',\n        ansvarlig: 'Administrator'\n      }, {\n        id: 'kat-4',\n        kategori: 'Intervjuer',\n        ansvarlig: 'Administrator'\n      }, {\n        id: 'kat-5',\n        kategori: 'Kultur',\n        ansvarlig: 'Administrator'\n      }, {\n        id: 'kat-6',\n        kategori: 'Sport',\n        ansvarlig: 'Administrator'\n      }, {\n        id: 'kat-7',\n        kategori: 'Heureka-prosjekter',\n        ansvarlig: 'Administrator'\n      }, {\n        id: 'kat-8',\n        kategori: 'Kreativt hjørne',\n        ansvarlig: 'Administrator'\n      }];\n      setKategoriliste(standardKategoriliste);\n      localStorage.setItem('kategoriliste', JSON.stringify(standardKategoriliste));\n    }\n  }, []);\n\n  // Godkjenner en bruker\n  const godkjennBruker = brukerID => {\n    const oppdaterteBrukere = brukere.map(bruker => {\n      if (bruker.id === brukerID) {\n        // Legg til i jobblisten når en bruker godkjennes\n        const nyJobb = {\n          id: Date.now().toString(),\n          brukerID: bruker.id,\n          navn: bruker.navn,\n          rolle: 'journalist',\n          dato: new Date().toISOString()\n        };\n        const oppdatertJobbliste = [...jobbliste, nyJobb];\n        setJobbliste(oppdatertJobbliste);\n        localStorage.setItem('jobbliste', JSON.stringify(oppdatertJobbliste));\n        return {\n          ...bruker,\n          godkjent: true\n        };\n      }\n      return bruker;\n    });\n    setBrukere(oppdaterteBrukere);\n    localStorage.setItem('brukere', JSON.stringify(oppdaterteBrukere));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Nyskolen Posten\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"slogan\",\n            children: \"Elevdrevet avis for Nyskolen i Oslo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"navigation\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Forsiden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/om-oss\",\n            children: \"Om Nyskolen Posten\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), bruker ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/ny-artikkel\",\n              children: \"Skriv ny artikkel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/mine-artikler\",\n              children: \"Mine artikler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), bruker.rolle === 'admin' && /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin\",\n              children: \"Administrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleLogout,\n              className: \"logout-button\",\n              children: [\"Logg ut (\", bruker.navn, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              className: \"login-button\",\n              children: \"Logg inn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              className: \"register-button\",\n              children: \"Registrer deg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Hjem, {\n              artikler: artikler.filter(a => a.status === 'publisert')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/om-oss\",\n            element: /*#__PURE__*/_jsxDEV(OmOss, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/ny-artikkel\",\n            element: bruker ? /*#__PURE__*/_jsxDEV(NyArtikkel, {\n              leggTilArtikkel: leggTilArtikkel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin,\n              melding: \"Du m\\xE5 logge inn for \\xE5 skrive artikler\",\n              brukere: brukere\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/artikkel/:id\",\n            element: /*#__PURE__*/_jsxDEV(ArtikkelVisning, {\n              artikler: artikler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/mine-artikler\",\n            element: bruker ? /*#__PURE__*/_jsxDEV(MineArtikler, {\n              innloggetBruker: bruker,\n              artikler: artikler,\n              onDeleteArticle: slettArtikkel,\n              onUpdateArticle: oppdaterArtikkel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin,\n              melding: \"Du m\\xE5 logge inn for \\xE5 se dine artikler\",\n              brukere: brukere\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin\",\n            element: bruker && bruker.rolle === 'admin' ? /*#__PURE__*/_jsxDEV(AdminPanel, {\n              innloggetBruker: bruker,\n              brukere: brukere,\n              artikler: artikler,\n              onDeleteArticle: slettArtikkel,\n              onUpdateArticle: oppdaterArtikkel,\n              onUpdateUser: oppdaterBruker,\n              onDeleteUser: slettBruker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Hjem, {\n              artikler: artikler.filter(a => a.status === 'publisert')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin,\n              brukere: brukere\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: registrerBruker,\n              brukere: brukere\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YRVwck7SH+WWrZ+WLIT5YeXwrqs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","Hjem","OmOss","NyArtikkel","ArtikkelVisning","Login","Register","MineArtikler","AdminPanel","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","bruker","setBruker","artikler","setArtikler","brukere","setBrukere","jobbliste","setJobbliste","kategoriliste","setKategoriliste","adminEmails","handleLogin","brukerInfo","localStorage","setItem","JSON","stringify","handleLogout","removeItem","registrerBruker","nyBruker","some","b","epost","erAdmin","includes","brukerMedInfo","id","Date","now","toString","godkjent","rolle","dato","toISOString","oppdaterteBrukere","nyJobb","brukerID","navn","oppdatertJobbliste","oppdaterBruker","oppdatertBruker","map","slettBruker","brukerId","filter","leggTilArtikkel","nyArtikkel","artikkelMedInfo","forfatterNavn","forfatterID","status","oppdaterteArtikler","oppdaterArtikkel","oppdatertArtikkel","artikkel","slettArtikkel","artikkelId","lagretBruker","getItem","parse","lagretArtikler","lagretBrukere","adminBruker","lagretJobbliste","standardJobbliste","lagretKategoriliste","standardKategoriliste","kategori","ansvarlig","godkjennBruker","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","path","element","a","onLogin","melding","innloggetBruker","onDeleteArticle","onUpdateArticle","onUpdateUser","onDeleteUser","onRegister","_c","$RefreshReg$"],"sources":["/Users/mattis/src/NyskolenPosten/src/App.js"],"sourcesContent":["// App.js - Hovedkomponenten for Nyskolen Posten\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport Hjem from './components/Hjem';\nimport OmOss from './components/OmOss';\nimport NyArtikkel from './components/NyArtikkel';\nimport ArtikkelVisning from './components/ArtikkelVisning';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport MineArtikler from './components/MineArtikler';\nimport AdminPanel from './components/AdminPanel';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const [bruker, setBruker] = useState(null);\n  const [artikler, setArtikler] = useState([]);\n  const [brukere, setBrukere] = useState([]);\n  const [jobbliste, setJobbliste] = useState([]);\n  const [kategoriliste, setKategoriliste] = useState([]);\n  \n  // Liste over e-postadresser som automatisk får redaktør/admin-rolle\n  const adminEmails = ['mattis.tollefsen@nionett.no', 'admin@nyskolen.no'];\n  \n  // Håndterer innlogging\n  const handleLogin = (brukerInfo) => {\n    setBruker(brukerInfo);\n    localStorage.setItem('bruker', JSON.stringify(brukerInfo));\n  };\n  \n  const handleLogout = () => {\n    setBruker(null);\n    localStorage.removeItem('bruker');\n  };\n  \n  // Registrerer ny bruker\n  const registrerBruker = (nyBruker) => {\n    // Sjekk om epost allerede er registrert\n    if (brukere.some(b => b.epost === nyBruker.epost)) {\n      return false; // Epost allerede i bruk\n    }\n    \n    // Sjekk om e-posten er i listen over admin-e-poster\n    const erAdmin = adminEmails.includes(nyBruker.epost);\n    \n    const brukerMedInfo = {\n      ...nyBruker,\n      id: Date.now().toString(),\n      godkjent: erAdmin ? true : false, // Automatisk godkjent hvis admin-e-post\n      rolle: erAdmin ? 'admin' : 'journalist', // Sett rolle basert på e-post\n      dato: new Date().toISOString()\n    };\n    \n    const oppdaterteBrukere = [...brukere, brukerMedInfo];\n    setBrukere(oppdaterteBrukere);\n    localStorage.setItem('brukere', JSON.stringify(oppdaterteBrukere));\n    \n    // Hvis brukeren er admin, legg til i jobblisten\n    if (erAdmin) {\n      const nyJobb = {\n        id: Date.now().toString(),\n        brukerID: brukerMedInfo.id,\n        navn: brukerMedInfo.navn,\n        rolle: 'redaktør/administrator',\n        dato: new Date().toISOString()\n      };\n      \n      const oppdatertJobbliste = [...jobbliste, nyJobb];\n      setJobbliste(oppdatertJobbliste);\n      localStorage.setItem('jobbliste', JSON.stringify(oppdatertJobbliste));\n    }\n    \n    return true; // Registrering vellykket\n  };\n  \n  // Oppdater bruker\n  const oppdaterBruker = (oppdatertBruker) => {\n    const oppdaterteBrukere = brukere.map(bruker => \n      bruker.id === oppdatertBruker.id ? oppdatertBruker : bruker\n    );\n    setBrukere(oppdaterteBrukere);\n    localStorage.setItem('brukere', JSON.stringify(oppdaterteBrukere));\n  };\n  \n  // Slett bruker\n  const slettBruker = (brukerId) => {\n    const oppdaterteBrukere = brukere.filter(bruker => bruker.id !== brukerId);\n    setBrukere(oppdaterteBrukere);\n    localStorage.setItem('brukere', JSON.stringify(oppdaterteBrukere));\n  };\n  \n  // Legg til ny artikkel\n  const leggTilArtikkel = (nyArtikkel) => {\n    if (!bruker) return false;\n    \n    // Legger til bruker og dato til artikkelen\n    const artikkelMedInfo = {\n      ...nyArtikkel,\n      forfatterNavn: bruker.navn,\n      forfatterID: bruker.id,\n      dato: new Date().toISOString(),\n      id: Date.now().toString(),\n      status: 'publisert' // For testing setter vi status til publisert\n    };\n    \n    // Legger til i listen over artikler\n    const oppdaterteArtikler = [artikkelMedInfo, ...artikler];\n    setArtikler(oppdaterteArtikler);\n    localStorage.setItem('artikler', JSON.stringify(oppdaterteArtikler));\n    \n    return artikkelMedInfo.id;\n  };\n  \n  // Oppdater artikkel\n  const oppdaterArtikkel = (oppdatertArtikkel) => {\n    const oppdaterteArtikler = artikler.map(artikkel => \n      artikkel.id === oppdatertArtikkel.id ? oppdatertArtikkel : artikkel\n    );\n    setArtikler(oppdaterteArtikler);\n    localStorage.setItem('artikler', JSON.stringify(oppdaterteArtikler));\n  };\n  \n  // Sletter en artikkel\n  const slettArtikkel = (artikkelId) => {\n    const oppdaterteArtikler = artikler.filter(artikkel => artikkel.id !== artikkelId);\n    setArtikler(oppdaterteArtikler);\n    localStorage.setItem('artikler', JSON.stringify(oppdaterteArtikler));\n  };\n  \n  // Henter data ved oppstart\n  useEffect(() => {\n    // Sjekk om bruker er logget inn i localStorage\n    const lagretBruker = localStorage.getItem('bruker');\n    if (lagretBruker) {\n      setBruker(JSON.parse(lagretBruker));\n    }\n    \n    // Henter artikler fra localStorage\n    const lagretArtikler = localStorage.getItem('artikler');\n    if (lagretArtikler) {\n      setArtikler(JSON.parse(lagretArtikler));\n    }\n    \n    // Henter brukere fra localStorage\n    const lagretBrukere = localStorage.getItem('brukere');\n    if (lagretBrukere) {\n      setBrukere(JSON.parse(lagretBrukere));\n    } else {\n      // Opprett admin-bruker ved første oppstart hvis ingen brukere finnes\n      const adminBruker = {\n        id: 'admin-1',\n        navn: 'Administrator',\n        epost: 'admin@nyskolen.no',\n        rolle: 'admin',\n        godkjent: true,\n        dato: new Date().toISOString()\n      };\n      setBrukere([adminBruker]);\n      localStorage.setItem('brukere', JSON.stringify([adminBruker]));\n    }\n    \n    // Henter jobbliste fra localStorage\n    const lagretJobbliste = localStorage.getItem('jobbliste');\n    if (lagretJobbliste) {\n      setJobbliste(JSON.parse(lagretJobbliste));\n    } else {\n      // Opprett standard jobbliste hvis ingen finnes\n      const standardJobbliste = [\n        {\n          id: 'jobb-1',\n          brukerID: 'admin-1',\n          navn: 'Administrator',\n          rolle: 'redaktør/administrator',\n          dato: new Date().toISOString()\n        }\n      ];\n      setJobbliste(standardJobbliste);\n      localStorage.setItem('jobbliste', JSON.stringify(standardJobbliste));\n    }\n    \n    // Henter kategoriliste fra localStorage\n    const lagretKategoriliste = localStorage.getItem('kategoriliste');\n    if (lagretKategoriliste) {\n      setKategoriliste(JSON.parse(lagretKategoriliste));\n    } else {\n      // Opprett standard kategoriliste hvis ingen finnes\n      const standardKategoriliste = [\n        { id: 'kat-1', kategori: 'Nyheter', ansvarlig: 'Administrator' },\n        { id: 'kat-2', kategori: 'Saksmøtet', ansvarlig: 'Administrator' },\n        { id: 'kat-3', kategori: 'Meninger', ansvarlig: 'Administrator' },\n        { id: 'kat-4', kategori: 'Intervjuer', ansvarlig: 'Administrator' },\n        { id: 'kat-5', kategori: 'Kultur', ansvarlig: 'Administrator' },\n        { id: 'kat-6', kategori: 'Sport', ansvarlig: 'Administrator' },\n        { id: 'kat-7', kategori: 'Heureka-prosjekter', ansvarlig: 'Administrator' },\n        { id: 'kat-8', kategori: 'Kreativt hjørne', ansvarlig: 'Administrator' }\n      ];\n      setKategoriliste(standardKategoriliste);\n      localStorage.setItem('kategoriliste', JSON.stringify(standardKategoriliste));\n    }\n  }, []);\n  \n  // Godkjenner en bruker\n  const godkjennBruker = (brukerID) => {\n    const oppdaterteBrukere = brukere.map(bruker => {\n      if (bruker.id === brukerID) {\n        // Legg til i jobblisten når en bruker godkjennes\n        const nyJobb = {\n          id: Date.now().toString(),\n          brukerID: bruker.id,\n          navn: bruker.navn,\n          rolle: 'journalist',\n          dato: new Date().toISOString()\n        };\n        \n        const oppdatertJobbliste = [...jobbliste, nyJobb];\n        setJobbliste(oppdatertJobbliste);\n        localStorage.setItem('jobbliste', JSON.stringify(oppdatertJobbliste));\n        \n        return {...bruker, godkjent: true};\n      }\n      return bruker;\n    });\n    \n    setBrukere(oppdaterteBrukere);\n    localStorage.setItem('brukere', JSON.stringify(oppdaterteBrukere));\n  };\n  \n  return (\n    <Router>\n      <div className=\"app\">\n        <header className=\"header\">\n          <div className=\"logo-container\">\n            <h1>Nyskolen Posten</h1>\n            <p className=\"slogan\">Elevdrevet avis for Nyskolen i Oslo</p>\n          </div>\n          <nav className=\"navigation\">\n            <Link to=\"/\">Forsiden</Link>\n            <Link to=\"/om-oss\">Om Nyskolen Posten</Link>\n            {bruker ? (\n              <>\n                <Link to=\"/ny-artikkel\">Skriv ny artikkel</Link>\n                <Link to=\"/mine-artikler\">Mine artikler</Link>\n                {bruker.rolle === 'admin' && \n                  <Link to=\"/admin\">Administrer</Link>\n                }\n                <button onClick={handleLogout} className=\"logout-button\">Logg ut ({bruker.navn})</button>\n              </>\n            ) : (\n              <>\n                <Link to=\"/login\" className=\"login-button\">Logg inn</Link>\n                <Link to=\"/register\" className=\"register-button\">Registrer deg</Link>\n              </>\n            )}\n          </nav>\n        </header>\n        \n        <main className=\"main-content\">\n          <Routes>\n            <Route path=\"/\" element={<Hjem artikler={artikler.filter(a => a.status === 'publisert')} />} />\n            <Route path=\"/om-oss\" element={<OmOss />} />\n            <Route path=\"/ny-artikkel\" element={\n              bruker ? \n                <NyArtikkel leggTilArtikkel={leggTilArtikkel} /> : \n                <Login onLogin={handleLogin} melding=\"Du må logge inn for å skrive artikler\" brukere={brukere} />\n            } />\n            <Route path=\"/artikkel/:id\" element={<ArtikkelVisning artikler={artikler} />} />\n            <Route path=\"/mine-artikler\" element={\n              bruker ? \n                <MineArtikler \n                  innloggetBruker={bruker}\n                  artikler={artikler} \n                  onDeleteArticle={slettArtikkel}\n                  onUpdateArticle={oppdaterArtikkel}\n                /> : \n                <Login onLogin={handleLogin} melding=\"Du må logge inn for å se dine artikler\" brukere={brukere} />\n            } />\n            <Route path=\"/admin\" element={\n              bruker && bruker.rolle === 'admin' ? \n                <AdminPanel \n                  innloggetBruker={bruker}\n                  brukere={brukere} \n                  artikler={artikler} \n                  onDeleteArticle={slettArtikkel}\n                  onUpdateArticle={oppdaterArtikkel}\n                  onUpdateUser={oppdaterBruker}\n                  onDeleteUser={slettBruker}\n                /> : \n                <Hjem artikler={artikler.filter(a => a.status === 'publisert')} />\n            } />\n            <Route path=\"/login\" element={<Login onLogin={handleLogin} brukere={brukere} />} />\n            <Route path=\"/register\" element={<Register onRegister={registrerBruker} brukere={brukere} />} />\n          </Routes>\n        </main>\n        \n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}